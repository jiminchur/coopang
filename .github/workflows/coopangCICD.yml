name: Deploy to EC2

on:
  push:
    branches:
      - DEV-cicd
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate application.yml
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"gateway"* ]]; then
            echo "${{ secrets.GATEWAY_YML }}" > "./BOOT/gateway/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"user"* ]]; then
            echo "${{ secrets.USER_YML }}" > "./BOOT/user/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"hub"* ]]; then
            echo "${{ secrets.HUB_YML }}" > "./BOOT/hub/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"delivery"* ]]; then
            echo "${{ secrets.DELIVERY_YML }}" > "./BOOT/delivery/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"order"* ]]; then
            echo "${{ secrets.ORDER_YML }}" > "./BOOT/order/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"product"* ]]; then
            echo "${{ secrets.PRODUCT_YML }}" > "./BOOT/product/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"eureka"* ]]; then
            echo "${{ secrets.EUREKA_YML }}" > "./CLOUD/eureka/src/main/resources/application.yml"
          fi
          if [[ "${{ github.event.head_commit.message }}" == *"ainoti"* ]]; then
            echo "${{ secrets.AINOTI_YML }}" > "./BOOT/ainoti/src/main/resources/application.yml"
          fi
          

      - name: Add EC2 Host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Images to Docker Hub
        run: |
          for service in "gateway" "user" "hub" "delivery" "order" "product" "eureka" "ainoti"; do
            if [[ "${{ github.event.head_commit.message }}" == *"$service"* ]]; then
              # Gradle 빌드
              ./gradlew BOOT:$service:build -x test
              # Docker 이미지 빌드
              docker build -t your-dockerhub-username/$service:latest ./BOOT/$service
              # Docker 이미지 푸시
              docker push your-dockerhub-username/$service:latest
            fi
          done

      - name: Manage Docker Compose on EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > foodtogo.pem
          chmod 600 foodtogo.pem
          ssh -i foodtogo.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            for service in "gateway" "user" "hub" "delivery" "order" "product" "eureka" "ainoti"; do
              if [[ "${{ github.event.head_commit.message }}" == *"$service"* ]]; then
                echo "Stopping and removing containers for $service"
                docker-compose -f "/path/to/$service/docker-compose.yml" down
                echo "Pulling the latest image for $service"
                docker-compose -f "/path/to/$service/docker-compose.yml" pull
                echo "Starting containers for $service"
                docker-compose -f "/path/to/$service/docker-compose.yml" up -d
              fi
            done
          EOF
